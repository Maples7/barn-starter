# Your information to render pages
## All key-value pairs can be used in html template of some theme specified in `config.yml`
## See https://github.com/Maples7/barn to catch more

pageTitle: 黎琦的简历 | maples7.com
head_pic: image/head.jpg
icon: image/favicon.ico
name: 黎  琦
title: Web 后端开发

profile: 
  - 我是一名热爱编程的 Web 后端开发者，目前专注于 Node.js 技术栈，但曾经也使用过 PHP 和 Python，最近也开始对 Erlang 感兴趣。
  - 平时我喜欢钻研和学习新技术，会定期阅读优秀的技术博客提升自己，自己也有撰写技术博客的习惯。
  - 本人崇尚开源，当有一些感觉不错的想法时就会研究其实现原理或尝试造轮子。
  - 高中时曾参加青少年奥林匹克信息学竞赛获得省级二等奖，给算法和数据结构打下了不错的基础。
  - 目前希望寻求一份满意的 Web 后端开发的工作。

education:
  2012.9 - 2016.6: 山东大学 - 电气工程与自动化(卓越) - 本科

contact:
  邮箱: XXXXXXX@XXX.com
  手机: 18XXXXXXXX9
  微信: abcdefgh
  居住地: 中国 广州

others:
  Github: github.com/Maples7
  个人博客: maples7.com
  知乎: zhihu.com/people/maples7
  LinkedIn: linkedin.com/in/maples7/
  在线简历: cv.maples7.com

work_exprience: 
- 
  company_name: XX网络
  job_position: Web 研发工程师
  from: 2016.7
  to: 至今
  content: 主要负责使用 Node.js 技术栈进行 Web 后端开发，涉及 Express／Koa 框架、MySQL 关系型数据库、MongoDB 非关系型数据库、Redis 缓存数据库等。也曾简单使用 Vue.js 构建前端用户界面。在部分项目中还使用过 PHP 与 .NET Core 进行项目的构建和日常维护工作，对后端技术比较了解。
  list:
    XXXX论坛: 主要负责使用 Node.js 技术栈进行 Web 后端开发，涉及 Express／Koa 框架、MySQL 关系型数据库、MongoDB 非关系型数据库、Redis 缓存数据库等。也曾简单XXXXXXXXXXXXXXX使用 Vue.js 构建前端用户界面。在部分项目中还使用过 PHP 与 .NET Core 进行项目的构建和日常维护工作，对后端技术比较了解。
    XXXX检测: 主要负责使用 Node.js 技术栈进行 Web 后端开发，涉及 Express／Koa 框架、MySQL 关系型数据库、MongoDB 非关系型数据库、Redis 缓存数据库等。也曾简单使用 Vue.js 构建前端XXXXXXXXXXXXXXXXXX用户界面。在部分项目中还使用过 PHP 与 .NET Core 进行项目的构建和日常维护工作，对后端技术比较了解。
    XXXXXX: 主要负责使用 Node.js 技术栈进行 Web 后端开发，涉及 Express／Koa 框架、MySQL 关系型数据库、MongoDB 非关系型数据库、Redis 缓存数据库等。

personal_work:
  barn: 
    link: https://github.com/Maples7/barn
    content: 用于自动生成、部署在线简历到 GitHub Pages 等服务上的一套 CLI 工具，可以视为 Hexo 的简历版本。本简历即使用本工具生成。
  express-mount-routes: 
    link: https://github.com/Maples7/express-mount-routes
    content: 用于按约定标准自动从文件系统中加载 Express 路由及对应的 Controllers。
  express-final-response: 
    link: https://github.com/Maples7/express-final-response
    content: Express 的最后一个中间件，用于封装任何请求的返回数据，同时支持返回 JSON 、渲染 HTML 页面返回以及处理请求错误。

skill: 
  Node.js / JavaScript / C: 90%
  PHP / Python / C++: 70%
  HTML / Erlang / Shell: 50%
  CSS: 30%
